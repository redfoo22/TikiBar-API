{"version":3,"sources":["../../../src/test/unit/account.test.js"],"names":["Account","require","describe","beforeEach","done","account","email","password","save","error","console","log","message","it","findOne","err","should","eql","afterEach","remove"],"mappings":"AAAA;;AAEA;;;;AACA;;;;AAGA;;;;;;AADA,IAAIA,UAAUC,QAAQ,qBAAR,CAAd;;;AAGA,kBAAc,cAAM;AAClBC,WAAS,SAAT,EAAoB,YAAM;;AAExBC,eAAW,UAACC,IAAD,EAAU;AACnB,UAAIC,UAAU,IAAIL,OAAJ,CAAY;AACxBM,eAAO,oBADiB;AAExBC,kBAAU;AAFc,OAAZ,CAAd;;AAKAF,cAAQG,IAAR,CAAa,UAACC,KAAD,EAAW;AACtB,YAAIA,KAAJ,EAAWC,QAAQC,GAAR,CAAY,UAAUF,MAAMG,OAA5B,EAAX,KACKF,QAAQC,GAAR,CAAY,UAAZ;AACLP;AACD,OAJD;AAKD,KAXD;;AAaAS,OAAG,sBAAH,EAA2B,UAACT,IAAD,EAAU;AACnCJ,cAAQc,OAAR,CAAgB,EAAER,OAAO,oBAAT,EAAhB,EAAiD,UAASS,GAAT,EAAcV,OAAd,EAAuB;AACtEA,gBAAQC,KAAR,CAAcU,MAAd,CAAqBC,GAArB,CAAyB,oBAAzB;AACAP,gBAAQC,GAAR,CAAY,gBAAZ,EAA8BN,QAAQC,KAAtC;AACAF;AACD,OAJD;AAKD,KAND;;AAQAc,cAAU,UAACd,IAAD,EAAU;AAClBJ,cAAQmB,MAAR,CAAe,EAAEb,OAAO,oBAAT,EAAf,EAAgD,YAAM;AACpDF;AACD,OAFD;AAGD,KAJD;AAKD,GA5BD;AA6BD,CA9BD","file":"account.test.js","sourcesContent":["'use strict';\n\nimport should from 'should';\nimport mongoose from 'mongoose';\n\nlet Account = require('../../model/account');\nimport initializeDb from '../../db';\n\ninitializeDb( db => {\n  describe('Account', () => {\n\n    beforeEach((done) => {\n      let account = new Account({\n        email: 'test@devslopes.com',\n        password: 'testy'\n      });\n\n      account.save((error) => {\n        if (error) console.log('error' + error.message);\n        else console.log('no error');\n        done();\n      });\n    });\n\n    it('find a user by email', (done) => {\n      Account.findOne({ email: 'test@devslopes.com' }, function(err, account) {\n        account.email.should.eql('test@devslopes.com');\n        console.log(\"       email: \", account.email);\n        done();\n      });\n    });\n\n    afterEach((done) => {\n      Account.remove({ email: 'test@devslopes.com' }, () => {\n        done();\n      });\n    });\n  });\n});\n"]}