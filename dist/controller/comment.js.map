{"version":3,"sources":["../../src/controller/comment.js"],"names":["Promise","config","db","api","get","req","res","find","exec","err","comments","status","json","message","findById","params","id","populate","path","model","comment","momentId","post","body","userId","userProfileImgUrl","displayName","text","moment","newComment","save","update","_id","$addToSet","send"],"mappings":"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","file":"comment.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nmongoose.Promise = Promise;\nimport { Router } from 'express';\nimport Comment from '../model/comment';\nimport Moment from '../model/moment';\nimport bodyParser from 'body-parser';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // GET all comments\n  // '/v1/comments'\n  api.get('/', (req, res) => {\n    Comment\n      .find()\n      .exec((err, comments) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(comments);\n      });\n  });\n\n  // GET Specific comment byId\n  // '/v1/comments/byId/:id'\n  api.get('/byId/:id', (req, res) => {\n    Comment\n      .findById(req.params.id)\n      .populate({\n          path: 'comments',\n          model: 'Comment'\n        })\n      .exec((err, comment) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(comment);\n      });\n  });\n\n  // GET Specific comment by momentId\n  // '/v1/comments/byMomentId/:momentId'\n  api.get('/byMomentId/:momentId', (req, res) => {\n    Comment\n      .find({ 'momentId': req.params.momentId })\n      .populate({\n          path: 'comments',\n          model: 'Comment'\n        })\n      .exec((err, comment) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(comment);\n      });\n  });\n\n  // POST add new Comment\n  // {\n  //    momentId: momentId,\n  //    userId: userId,\n  //    title: 'RedFoo's Comment',\n  //    description: \"Cool stuff here\",\n  //    mediaUrls: [\"www.image1.com\"],\n  //    location: location\n  // }\n  // '/v1/comments/addComment'\n  api.post('/addComment', (req, res) => {\n    const momentId = req.body.momentId;\n    const userId = req.body.userId;\n    const userProfileImgUrl = req.body.userProfileImgUrl;\n    const displayName = req.body.displayName;\n    const text = req.body.text;\n\n    if (momentId == null) {\n      res.status(409).json({ message: `You must enter a journey id` });\n      return;\n    }\n    Moment\n      .findById(momentId, (err, moment) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        let newComment = new Comment({\n            momentId: momentId,\n            userId: userId,\n            userProfileImgUrl: userProfileImgUrl,\n            displayName: displayName,\n            text: text\n        });\n        newComment.save(err => {\n          if (err) {\n            res.status(409).json({ message: `An error occurred: ${err.message}` });\n            return;\n          }\n          Moment.update({ _id: momentId }, { $addToSet: { comments: newComment._id } }, (err, moment) => {\n            if (err) {\n              res.status(409).json({ message: `An error occurred: ${err.message}` });\n              return;\n            }\n            res.send(newComment);\n        });\n      });\n    });\n  });\n\n  return api;\n}\n"]}