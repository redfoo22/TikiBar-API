{"version":3,"sources":["../../src/controller/userData.js"],"names":["Promise","config","db","api","get","req","res","find","exec","err","userData","status","json","message","findById","params","id","populate","path","model","findOne","displayName","post","userId","body","location","update","_id","$addToSet","user","newUserData","save","send"],"mappings":"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","file":"userData.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nmongoose.Promise = Promise;\nimport { Router } from 'express';\nimport UserData from '../model/userData';\nimport bodyParser from 'body-parser';\nimport UserDataExt from './extensions/userData-ext';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // GET all userData\n  // '/v1/userData'\n  api.get('/', (req, res) => {\n    UserData\n      .find()\n      .exec((err, userData) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(userData);\n      });\n  });\n\n// GET Specific users userData byId\n// '/v1/userData/byId/:id'\napi.get('/byId/:id', (req, res) => {\n  UserData\n    .findById(req.params.id)\n    .populate({\n      path: 'journeys',\n      model: 'Journey'\n    })\n    .exec((err, userData) => {\n      if (err) {\n        res.status(409).json({ message: `An error occurred: ${err.message}` });\n        return;\n      }\n      res.status(200).json(userData);\n    });\n});\n\n  // GET Specific users by displayName\n// '/v1/userData/byDisplayName/:displayName'\napi.get('/byDisplayName/:displayName', (req, res) => {\n  UserData\n    .findOne({ 'displayName': req.params.displayName })\n    .populate({\n      path: 'journeys',\n      model: 'Journey'\n    })\n    .exec((err, userData) => {\n      if (err) {\n        res.status(409).json({ message: `An error occurred: ${err.message}` });\n        return;\n      }\n      res.status(200).json(userData);\n    });\n});\n\napi.post('/updateUserLocation', (req, res) => {\n  const userId = req.body.userId;\n  const location = req.body.location;\n\n  if (userId == null || location == null) {\n    res.status(409).json({ message: `You must enter a user id and location object` });\n  }\n  UserData.update({ _id: userId }, { $addToSet: { location: location} }, (err, user) => {\n    if (err) {\n      res.status(409).json({ message: `An error occurred: ${err.message}` });\n      return;\n    }\n    res.status(200).json({ message: 'Location successfully updated'});\n  });\n});\n\n  // POST add new user\n  // {\n  //    displayName: 'RedFoo',\n  //    profileImageUrl: 'www.myProfileImage.com',\n  // }\n  // '/v1/userData/addUser'\n  api.post('/addUser', (req, res) => {\n    const displayName = req.body.displayName;\n\n    if (displayName == null) {\n      res.status(409).json({ message: `You must enter a Display name` });\n      return;\n    }\n\n    let newUserData = new UserData({\n      displayName: displayName\n    });\n\n    newUserData.save(err => {\n      if (err) {\n        res.status(409).json({ message: `An error occurred: ${err.message}` });\n      } else {\n        res.send(newUserData);\n      }\n    });\n  });\n\n  return api;\n}\n"]}