{"version":3,"sources":["../../src/controller/moment.js"],"names":["Promise","config","db","api","get","req","res","find","exec","err","moments","status","json","message","findById","params","id","populate","path","model","moment","userId","post","journeyId","body","title","description","mediaUrls","location","journey","newMoment","save","update","_id","$addToSet","send"],"mappings":"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","file":"moment.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nmongoose.Promise = Promise;\nimport { Router } from 'express';\nimport Moment from '../model/moment';\nimport Journey from '../model/journey';\nimport bodyParser from 'body-parser';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // GET all moments\n  // '/v1/moments'\n  api.get('/', (req, res) => {\n    Moment\n      .find()\n      .exec((err, moments) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(moments);\n      });\n  });\n\n  // GET Specific moment byId\n  // '/v1/moments/byId/:id'\n  api.get('/byId/:id', (req, res) => {\n    Moment\n      .findById(req.params.id)\n      .populate({\n          path: 'comments',\n          model: 'Comment'\n        })\n      .exec((err, moment) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(moment);\n      });\n  });\n\n  // GET Specific moments by journeyId\n  // '/v1/moments/byJourneyId/:journeyId'\n  api.get('/byJourneyId/:journeyId', (req, res) => {\n    Moment\n      .find({ 'journeyId': req.params.userId })\n      .populate({\n          path: 'comments',\n          model: 'Comment'\n        })\n      .exec((err, moments) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n        res.status(200).json(moments);\n      });\n  });\n\n  // POST add new Moment\n  // {\n  //    journeyId: journeyId,\n  //    title: 'RedFoo's Moment',\n  //    description: \"Cool stuff here\",\n  //    mediaUrls: [\"www.image1.com\"],\n  //    location: location\n  // }\n  // '/v1/moments/addMoment'\n  api.post('/addMoment', (req, res) => {\n    const journeyId = req.body.journeyId;\n    const title = req.body.title;\n    const description = req.body.description;\n    const mediaUrls = req.body.mediaUrls;\n    const location = req.body.location;\n\n    if (journeyId == null) {\n      res.status(409).json({ message: `You must enter a journey id` });\n      return;\n    }\n    Journey\n      .findById(journeyId, (err, journey) => {\n        if (err) {\n          res.status(409).json({ message: `An error occurred: ${err.message}` });\n          return;\n        }\n\n        if (!journey) {\n          res.status(404).json({ message: `Journey ID does not exist` });\n          return;\n        }\n\n        let newMoment = new Moment({\n          journeyId: journeyId,\n          title: title,\n          description: description,\n          mediaUrls: mediaUrls,\n          location: location\n        });\n\n        newMoment.save(err => {\n          if (err) {\n            res.status(409).json({ message: `An error occurred: ${err.message}` });\n            return;\n          }\n          Journey.update({ _id: journeyId }, { $addToSet: { moments: newMoment._id } }, (err, journey) => {\n            if (err) {\n              res.status(409).json({ message: `An error occurred: ${err.message}` });\n              return;\n            }\n            res.send(newMoment);\n        });\n      });\n    });\n  });\n\n  return api;\n}\n"]}